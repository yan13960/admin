<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"

       xmlns:context="http://www.springframework.org/schema/context"

       xmlns:aop="http://www.springframework.org/schema/aop"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd

       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd

       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">

   <!--自动扫包-->
   <context:component-scan base-package="cn.itnanls"/>

   <bean id="LogAspect" class="cn.itnanls.aop.LogAspect"/>
    <!-- AOP 面向切面变成 proxy-target-class="true" 声明使用CGLIB代理 -->
    <!--
        advisor 代表的就是我们的切面类
        ref 切面类的引用
        pointcut 切入点
        execution(作用域(可忽略) *(返回类型 用*表示任意类型) com.cold.day03.c_qzd.*.*(..)(包，不可忽略，用*可以表示一整个层级))
   当我们配置了环绕通知之后,切入点方法没有执行,而通知方法执行了
    -->
    <aop:config>
        <aop:aspect ref="LogAspect">
           <!--切点表达式-->

            <aop:pointcut id="LogAspectPointCut" expression="execution( * cn.itnanls.service.impl.*.*(..))"/>
            <aop:before method="before" pointcut-ref="LogAspectPointCut"/>
            <aop:after-returning method="returning" pointcut-ref="LogAspectPointCut"/>
            <aop:after-throwing method="throwing" pointcut-ref="LogAspectPointCut"/>
            <!--<aop:around method="around" pointcut-ref="LogAspectPointCut"/>-->
            <aop:after method="after" pointcut-ref="LogAspectPointCut"/>
        </aop:aspect>
    </aop:config>


</beans>
