<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 2.1扫描装配bean -->
    <context:component-scan base-package="com.javacto"></context:component-scan>
    <!--获取db.properties文件 -->
    <context:property-placeholder location="classpath:db.properties" />
    <!-- 2.2注入数据源 alibaba数据源 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClass}" />
        <property name="url" value="${jdbc.jdbcUrl}" />
        <property name="username" value="${jdbc.user}" />
        <property name="password" value="${jdbc.password}" />
        <property name="maxActive" value="10" /><!--连接池支持的最大连接数-->
        <!--连接池中的最小空闲连接数，Druid会定时扫描连接池的连接，如果空闲的连接数大于该值，
        则关闭多余的连接，反之则创建更多的连接以满足最小连接数要求。-->
        <property name="minIdle" value="5" />
    </bean>

    <!-- 2.3创建SqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 3.1注入数据源 -->
        <property name="dataSource" ref="dataSource"></property>
        <!-- 3.2加载SqlMapConfig.xml文件 -->
        <property name="configLocation" value="classpath:SqlMapConfig.xml"></property>
        <!-- 配置分页插件 -->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageHelper">
                    <property name="properties">
                        <!--设置数据库类型 Oracle,Mysql,MariaDB,SQLite,Hsqldb,PostgreSQL六种数据库 reasonable:禁用合理化时，如果pageNum<1或pageNum>pages会返回空数据 -->
                        <value>
                            dialect=Mysql
                            reasonable=true
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>
    <!-- 2.4创建Mybatis扫描器 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--批量配置映射文件 -->
        <property name="basePackage" value="com.javacto.mapper"></property>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>
    <!-- 2.5配置事务 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--5.1注入数据源 -->
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!-- 2.6事务注解生效 -->
    <tx:annotation-driven transaction-manager="transactionManager" />
</beans>